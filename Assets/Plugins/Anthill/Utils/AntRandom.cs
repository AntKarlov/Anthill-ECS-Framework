namespace Anthill.Utils
{
	using UnityEngine;

	public static class AntRandom
	{
		/// <summary>
		/// Returns random rounded value from the range.
		/// </summary>
		/// <param name="aLower">Lower value.</param>
		/// <param name="aUpper">Upper value.</param>
		/// <returns>Random value from range.</returns>
		public static int Range(int aLower, int aUpper)
		{
			return Mathf.RoundToInt(Random.value * (aUpper - aLower)) + aLower;
		}

		/// <summary>
		/// Returns random value from the range.
		/// </summary>
		/// <param name="aLower">Lower value.</param>
		/// <param name="aUpper">Upper value.</param>
		/// <returns>Random value from range.</returns>
		public static float Range(float aLower, float aUpper)
		{
			return Random.value * (aUpper - aLower) + aLower;
		}

		/// <summary>
		/// Returns random value from the range.
		/// </summary>
		/// <param name="aValue">Vector where is X is lower and Y is upper value.</param>
		/// <returns>Random value from range.</returns>
		public static float Range(Vector2 aValue)
		{
			return Range(aValue.x, aValue.y);
		}

		/// <summary>
		/// Returns a unique ID generated by standard Unity tools.
		/// </summary>
		/// <returns>Unique random string.</returns>
		public static string GetGuidDefault()
		{
			return System.Guid.NewGuid().ToString();
		}

		/// <summary>
		/// Returns a unique ID string.
		/// </summary>
		/// <returns>Unique random string.</returns>
		public static string GetGuid()
		{
			var epochStart = new System.DateTime(1970, 1, 1, 0, 0, 0, System.DateTimeKind.Utc);
			int currentEpochTime = (int) (System.DateTime.UtcNow - epochStart).TotalSeconds;
			int z1 = Range(0, 1000000);
			int z2 = Range(0, 1000000);
			return string.Concat(currentEpochTime.ToString(), "-", z1.ToString(), "-", z2.ToString());
		}
	}
}